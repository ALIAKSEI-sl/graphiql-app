import * as Yup from "yup";

export const validationSchemaRegistration = Yup.object().shape({
  name: Yup.string()
    .required('Поле "имя" обязательно для заполнения')
    .matches(/^[A-ZА-Я]/, "Имя должно начинаться с заглавной буквы"),
  email: Yup.string()
    .required('Поле "электронная почта" обязательно для заполнения')
    .email("Некорректный адрес электронной почты"),
  password: Yup.string()
    .required('Поле "пароль" обязательно для заполнения')
    .min(8, "Должно содержать 8 символов")
    .matches(/[A-ZА-Я]/, "Должен содержать заглавную букву")
    .matches(/[a-zа-я]/, "Должен содержать строчную букву")
    .matches(/[0-9]/, "Должен содержать цифру")
    .matches(/[!@#$%^&*]/, "Должен содержать один специальный символ"),
  confirmPassword: Yup.string()
    .required('Поле "подтверждение пароля" обязательно для заполнения')
    .oneOf([Yup.ref("password"), ""], "Пароли должны совпадать"),
});

export const validationSchemaLogin = Yup.object().shape({
  email: Yup.string()
    .required('Поле "электронная почта" обязательно для заполнения')
    .email("Некорректный адрес электронной почты"),
  password: Yup.string()
    .required('Поле "пароль" обязательно для заполнения')
    .min(8, "Должно содержать 8 символов")
    .matches(/[A-ZА-Я]/, "Должен содержать заглавную букву")
    .matches(/[a-zа-я]/, "Должен содержать строчную букву")
    .matches(/[0-9]/, "Должен содержать цифру")
    .matches(/[!@#$%^&*]/, "Должен содержать один специальный символ"),
});
